#! /bin/sh

pk_die() {
    echo "$@" >&2
    exit 1
}

pk_abspath() {
    pkrp_saveloc="$(pwd)"
    if [ -d "$1" ]; then
        cd -P "$1" || pk_die "cd into '$1' failed"
        pwd -P
    else
        cd -P "$(dirname -- "$1")" || pk_die "cd into '$(dirname -- "$1")' failed"
        echo "$(pwd -P)/$(basename -- "$1")"
    fi
    cd -P "$hrp_saveloc" || pk_die "cd into '$hrp_saveloc' failed"
}

pk_readlink() {
    if [ -L "$1" ]; then
       pkrl_target="$(find "$1" -prune -printf '%l')"
       if echo "$hrl_target" | grep -q "^/"; then
           pk_abspath "$hrl_target"
       else
           pk_abspath "$(dirname -- "$1")/$pkrl_target"
       fi
    else
       pk_abspath "$1"
    fi
}

pk_completion() {
    pkc_location="$(dirname -- "$(pk_readlink "$(command -v -- "$0")")")"
    if [ -e "$HOME/.bash_completion" ] &&  grep -q "^\. $pkc_location/pk_completion.bash" "$HOME/.bash_completion"; then
        echo "completion for pk already setup"
    else
        echo ". $pkc_location/pk_completion.bash"  >> "$HOME/.bash_completion"
        echo "completion for pk setup"
    fi
}

pk_detect_type() {
    if [ -e "/etc/os-release" ]; then
        if grep -q "debian" "/etc/os-release"; then
            echo "apt"
        elif grep -q "fedora" "/etc/os-release"; then
            echo "dnf"
        elif grep -q "alpine" "/etc/os-release"; then
            echo "apk"
        fi
    else
        if [ -n "${PREFIX-}" ] && echo "$PREFIX" | grep -q "com\.termux"; then
            echo "apt"
        fi
    fi
}

pk_usage() {
    cat << EOF
usage pk <action> [parameters]

actions:
   i, install <package>...  install new package(s)
   r, remove <package>..    uninstall package(s)
   s, search <needle>...    query the package database
   u, update                update the package database
   g, upgrade               upgrade the pakcages
   o, owner <path>          search the package owning a given file
   completion               setup bash completion for pk
   backend                  print the backend detected by pk
EOF
}

#######
# apk #
#######

pk_apk_install() {
    apk install "$@"
}

pk_apk_remove() {
    apk remove "$@"
}

pk_apk_search() {
    apk search "$@"
}

pk_apk_update() {
    apk update "$@"
}

pk_apk_upgrade() {
    apk upgrade "$@"
}

pk_apk_owner() {
    apk info --who-owns "$@"
}

#######
# apt #
#######

pk_apt_install() {
    sudo apt install "$@"
}

pk_apt_remove() {
    sudo apt remove "$@"
}

pk_apt_search() {
    apt search "$@"
}

pk_apt_update() {
    sudo apt update "$@"
}

pk_apt_upgrade() {
    sudo apt upgrade "$@"
}

pk_apt_owner() {
    dpkg -S "$@" 
}


#######
# dnf #
#######

pk_dnf_translate() {
    while [ $# -ne 0 ]
    do
	case "$1" in 
	    shellcheck)
		echo "ShellCheck"               
		;;
	    ifrench-gut|iamerican-huge|ispell)
		echo "tmispell-voikko"
		;;
	    texlive-latex-recommended)
		echo "textlive-latex"
		;;
	    texlive-bibtex-extra)
		echo "textlive-bibtex"
		;;
	    texlive-lang-french)
		echo "texlive-babel-french"
		;;
	    mu4e)
		echo "maildir-utils"
		;;
	    *)
		echo "$1"
		;; 
	esac
        shift
    done
}

pk_dnf_install() {
    sudo dnf install "$($pk_dnf_translate "$@")"
}

pk_dnf_remove() {
    sudo dnf remove "$($pk_dnf_translate "$@")"
}

pk_dnf_search () {
    dnf search "$@"
}

pk_dnf_update() {
    sudo dnf check-update "$@"
}

pk_dnf_upgrade() {
    sudo dnf upgrade "$@"
}

pk_dnf_owner() {
    rpm -qf "$@"
}


pk_type="$(pk_detect_type)"

if [ -z "$pk_type" ]; then
    pk_die "your package management system is not currently supported. you can contribute at https://github.com/crezvoy/pk"
fi

if [ $# -eq 0 ]
then
    pk_usage
    exit 1
fi

pk_cmd="$1"
shift

case "$pk_cmd" in
    i|install)
        pk_${pk_type}_install "$@"
        ;;
    r|remove)
        pk_${pk_type}_remove "$@"
        ;;
    s|search)
        pk_${pk_type}_search "$@"
        ;;
    u|update)
        pk_${pk_type}_update "$@"
        ;;
    g|upgrade)
        pk_${pk_type}_upgrade "$@"
        ;;
    o|owner)
        pk_${pk_type}_owner "$@"
        ;;
    completion)
        pk_completion "$@"  
        ;;
    backend)
        echo $pk_type
        ;;
esac
